// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be
//                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed
// four million, find the sum of the even-valued terms.


/// Generates the next Fibonacci number by simply adding the last two known
/// Fibonacci numbers; and evaluates the sum of the of even valued terms
/// whose values is less than the `limit`
fn problem_2_sol_1(limit: u64) -> u64 {
    let mut fib = (1, 1);
    let mut sum = 0;
    while fib.1 < limit {
        if fib.1 % 2 == 0 {
            sum += fib.1;
        }
        fib = (fib.1, fib.1 + fib.0);
    }
    sum
}

fn main() {
    let limit = 4_000_000;
    println!("Sum of even-valued Fibonacci terms less than {}: {}",
             limit, problem_2_sol_1(limit));
}

#[test]
fn first_5_fib_terms() {
    assert_eq!(10, problem_2_sol_1(10));
}
